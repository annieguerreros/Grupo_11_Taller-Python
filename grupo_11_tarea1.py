# -*- coding: utf-8 -*-
"""GRUPO_11_Tarea1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CZ8zXMkc0vD_0u7NumCeG3IEwckKqscX

I. Utilizando un “if else” cree una estructura que evalúe “x” :
"""

x =  6
if x % 2 == 0 and x % 3 == 0:
    print("Es múltiplo de 2 y 3")
elif x % 2 == 0:
    print("Es múltiplo de 2")
elif x % 3 == 0:
    print("Es múltiplo de 3")
else:
    print("Otro caso")

"""II. Utilizando un “for loop” y el condicional “if else” para un rango del 1 al 100, evalúe “x”"""

for x in range(1, 101):
    if x % 3 == 0 and x % 5 == 0:
        print("FizzBuzz")
    elif x % 3 == 0:
        print("Fizz")
    elif x % 5 == 0:
        print("Buzz")

    else:
        print(x)

"""III. Crea una función calcular_descuento() que permita calcular el descuento aplicado a un
producto.
"""

def calcular_descuento(total_compra):
    if total_compra >= 1000:
      porcentaje_descuento = 20
    elif total_compra >= 500 or total_compra < 1000:
      porcentaje_descuento = 10
    elif total_compra < 500:
      porcentaje_descuento = 0
    precio_con_descuento = total_compra - (total_compra * porcentaje_descuento / 100)
    return precio_con_descuento

print(calcular_descuento(1200))

print(calcular_descuento(750))

print(calcular_descuento(300))

"""IV.Crea una función llamada clasificar_edad() que reciba como parámetro la edad de una
persona.
"""

def clasificar_edad(edad):
    if edad < 12:
        return "Niño"
    elif 12 <= edad <= 17:
        return "Adolescente"
    elif 18 <= edad <= 24:
        return "Joven"
    elif 25 <= edad <= 64:
        return "Adulto"
    elif edad >= 65:
        return "Adulto Mayor"


edades= [10, 19, 25, 70]

for edad in edades:
    categoria = clasificar_edad(edad)
    print(f"La persona con  {edad} años es un {categoria}")

"""V. Sea la fórmula del CRAEST PUCP"""

def calcular_craest(media_personal,media_curso,desviacion_curso):
  """
     Objetivo:
              - Calcular el CRAEST según la fórmula de la PUCP
     Input:
              -media_personal: Media del alumno en el curso
              -media_curso: Media del curso
              -desviacion_curso: Desviación estándar del curso
     Output:
              -calcular_craest: CRAEST del alumno
  """

  calcular_craest=((media_personal-media_curso)*10/desviacion_curso)+50
  return calcular_craest

calcular_craest(14,15,3.5)